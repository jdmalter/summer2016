package model.command;

import model.productbacklog.ProductBacklog;
import model.productbacklogitem.ProductBacklogItem;

/**
 * 
 * @author Jacob Malter
 *
 * @param <P>
 *        any subclass of ProductBacklogItem
 */
public final class CommandFactory<P extends ProductBacklogItem> {

   /** a force ranked list of Product Backlog Items */
   private final ProductBacklog<P> productBacklog;

   /**
    * Prodives the given Product Backlog as an argument to every newly created
    * command generated by the invoking instance.
    * 
    * @param productBacklog
    *        a force ranked list of Product Backlog Items
    */
   public CommandFactory(ProductBacklog<P> productBacklog) {
      this.productBacklog = productBacklog;
   }

   /**
    * Generates a new command with the Product Backlog given to the constructor
    * and the Product Backlog Item given as a parameter.
    * 
    * @param item
    *        business value that consumes time and attention
    * @return a new command when executed, adds the given Product Backlog Item
    *         to the given Product Backlog.
    */
   public Command<P> createAdd(P item) {
      return new AddCommand<P>(productBacklog, item);
   }

}